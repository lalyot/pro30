//wifi 연결
#include <ESP8266WiFi.h>

const char* ssid = "itschool303";
const char* password = "!itschool303";

WiFiServer server(80);


void setup() {
  
  Serial.begin(9600);
  delay(10);
  

  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }   
  Serial.println("");
  Serial.println("WiFi connected");
  

  server.begin();
  Serial.println("Server started");


  Serial.println(WiFi.localIP());
}

void loop() {

  WiFiClient client = server.available(); // 클라이언트 접속이 들어오는지 체크
  if (!client) {
    return;
  }
 
  Serial.println("new client");
 

  String req = client.readStringUntil('\r');
  Serial.println(req);
  client.flush();


  String s="<html>";
  s=s+"<meta name='viewport' content='width=device-width, initial-scale=1.0'/>";
  ;
  s=s+"<meta http-equiv='Content-Type' content='text/html;charset=utf-8' />";
  s=s+"<head></head><body>";
  s=s+"<h3 align='center'>아두이두</h3><li align='center'>당신은</li> <li align='center'>임베디드의</li><li align='center'>첫걸믐을 떼었습니다.</li><li align='center'>앞으로 더욱 노력하시길</li></body></html>";
   
  
   
   


  client.print(s);
  delay(1);
  Serial.println("Client disonnected");

}

// lanp on/off
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include <ESP8266mDNS.h>

const char* ssid = "itschool303";
const char* password = "!itschool303";
ESP8266WebServer server(80);

const int led = 14;
String s,s_head;

void handleRoot() {
  digitalWrite(led, HIGH);
  s=s_head+"<h1>전구 키기</h1><br><div border='1px solid orange'><p>노력끝에 봄이 오는가?</p></div><br>";
  server.send(200, "text/html", s); 
  //server.send(200, "text/plain", "hello from esp8266!");
}

void handleNotFound(){
  digitalWrite(led, 1);
  String message = "File Not Found\n\n";
  message += "URI: ";
  message += server.uri();
  message += "\nMethod: ";
  message += (server.method() == HTTP_GET)?"GET":"POST";
  message += "\nArguments: ";
  message += server.args();
  message += "\n";
  for (uint8_t i=0; i<server.args(); i++){
    message += " " + server.argName(i) + ": " + server.arg(i) + "\n";
  }
  server.send(404, "text/plain", message);
  digitalWrite(led, 0);
}
void setupWifi() {
  WiFi.mode(WIFI_STA); 
  WiFi.begin(ssid, password);
  Serial.println("");

 
  setupWifi();

  
  s_head="<meta name='viewport' content='width=device-width, initial-scale=1.0'/>";
  //s=s+"<meta http-equiv='refresh' content='5'/>";
  s_head=s_head+"<meta http-equiv='Content-Type' content='text/html;charset=utf-8' />";


  
  server.on("/", handleRoot);
  server.on("/inline", [](){
    //server.send(200, "text/plain", "this works as well");
    digitalWrite(led, LOW);
    s=s_head+"<h1>전구 끄기</h1><br><p>한낱 돌맹이 같은 희망을 오늘도 가꾸며 살아간다.</p>";
    server.send(200, "text/html", s); 
  });

  server.onNotFound(handleNotFound);

  server.begin();
  Serial.println("HTTP server started");
}

void loop(void){
  server.handleClient();
}

